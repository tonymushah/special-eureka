directive @oneOf on INPUT_OBJECT

type Author {
    id: UUID!
    attributes: AuthorAttributes!
    relationships: AuthorRelationships!
}

type AuthorAttributes {
    name: String!
    imageUrl: Url
    biography: JSONObject!
    twitter: Url
    pixiv: Url
    melonBook: Url
    fanBox: Url
    booth: Url
    nicoVideo: Url
    skeb: Url
    fantia: Url
    tumblr: Url
    youtube: Url
    weibo: Url
    naver: Url
    website: Url
    version: Int!
    createdAt: MangaDexDateTime!
    updatedAt: MangaDexDateTime
}

type AuthorRelationships {
    works: [MangaObject!]!
}

enum ContentRating {
    EROTICA
    PORNOGRAPHIC
    SAFE
    SUGGESTIVE
}

type Cover {
    id: UUID!
    attributes: CoverAttributes!
    relationships: CoverRelationships!
}

type CoverAttributes {
    description: String!
    locale: Language
    volume: String
    fileName: String!
    createdAt: MangaDexDateTime!
    updatedAt: MangaDexDateTime
    version: Int!
}

type CoverRelationships {
    manga: MangaObject!
    user: User!
}

"""
Target demographic for manga.
"""
enum Demographic {
    SHOUNEN
    SHOUJO
    SEINEN
    JOSEI
    NONE
}

type GraphQLMangaAttributes {
    title: JSONObject!
    altTitles: [JSONObject!]!
    description: JSONObject!
    isLocked: Boolean!
    links: MangaLinks
    originalLanguage: Language!
    lastVolume: String
    lastChapter: String
    publicationDemographic: Demographic
    status: MangaStatus!
    year: Int
    contentRating: ContentRating
    latestUploadedChapter: UUID
    availableTranslatedLanguages: [Language!]
    tags: [Tag!]!
    state: MangaState!
    createdAt: MangaDexDateTime!
    updatedAt: MangaDexDateTime
    version: Int!
}

"""
A scalar that can represent any JSON Object value.
"""
scalar JSONObject

"""
Languages supported by MangaDex.
"""
enum Language {
    ARABIC
    AZERBAIJANI
    BENGALI
    BULGARIAN
    BURMESE
    CATALAN
    CHINESE_ROMANIZED
    CHINESE_SIMPLIFIED
    CHINESE_TRADITIONAL
    CROATIAN
    CZECH
    DANISH
    DUTCH
    ENGLISH
    ESPERANTO
    FILIPINO
    FINNISH
    FRENCH
    GERMAN
    GREEK
    HEBREW
    HINDI
    HUNGARIAN
    INDONESIAN
    ITALIAN
    JAPANESE
    JAPANESE_ROMANIZED
    KAZAKH
    KOREAN
    KOREAN_ROMANIZED
    LATIN
    LITHUANIAN
    MALAY
    MONGOLIAN
    NEPALI
    NILO_SAHARAN
    NORWEGIAN
    PERSIAN
    POLISH
    PORTUGUESE_BRAZILIAN
    PORTUGUESE_PORTUGAL
    ROMANSH
    ROMANIAN
    RUSSIAN
    SERBO_CROATIAN
    SLOVAK
    SPANISH_CASTILIAN
    SPANISH_LATIN_AMERICAN
    SWEDISH
    TAMIL
    THAI
    TURKISH
    UKRAINIAN
    VIETNAMESE
    UNKNOWN
}

scalar MangaDexDateTime

type MangaLinks {
    hasNoLinks: Boolean!
    amazon: Url
    anilist: Url
    animePlanet: Url
    bookWalker: Url
    cdJapan: Url
    ebookJapan: Url
    englishTranslation: Url
    kitsu: Url
    mangaUpdates: Url
    myAnimeList: Url
    novelUpdates: Url
    raw: Url
}

input MangaListParams {
    limit: Int
    offset: Int
    title: String
    authorOrArtist: UUID
    authors: [UUID!]!
    artists: [UUID!]!
    year: Int
    includedTags: [UUID!]!
    includedTagsMode: TagSearchMode
    excludedTags: [UUID!]!
    excludedTagsMode: TagSearchMode
    status: [MangaStatus!]!
    """
    Languages the manga results are originally published in.
    """
    originalLanguage: [Language!]!
    """
    A list of original languages to exclude.
    """
    excludedOriginalLanguage: [Language!]!
    """
    A list of languages that the manga is translated into.
    """
    availableTranslatedLanguage: [Language!]!
    publicationDemographic: [Demographic!]!
    mangaIds: [UUID!]!
    contentRating: [ContentRating!]!
    """
    DateTime string with following format: `YYYY-MM-DDTHH:MM:SS`.
    """
    createdAtSince: MangaDexDateTime
    """
    DateTime string with following format: `YYYY-MM-DDTHH:MM:SS`.
    """
    updatedAtSince: MangaDexDateTime
    order: MangaSortOrder
    includes: [ReferenceExpansionResource!]!
    hasAvailableChapters: Boolean
    """
    Scanlation group ID.
    """
    group: UUID
}

type MangaObject {
    id: UUID!
    attributes: GraphQLMangaAttributes!
    relationships: MangaRelationships!
}

type MangaQueries {
    get(id: UUID!): MangaObject!
    list(params: MangaListParams!): MangaResults!
}

type MangaRelated {
    id: UUID!
    related: MangaRelation!
    attributes: GraphQLMangaAttributes!
}

"""
Used in the `related` field of a Manga relationships.

<https://api.mangadex.org/docs/static-data/#manga-related-enum>
"""
enum MangaRelation {
    """
    The original work this spin-off manga has been adapted from.
    """
    ADAPTED_FROM
    """
    An alternative take of the story in this manga.
    """
    ALTERNATE_STORY
    """
    A different version of this manga with no other specific distinction.
    """
    ALTERNATE_VERSION
    """
    The original work this self-published derivative manga is based on.
    """
    BASED_ON
    """
    A colored variant of this manga.
    """
    COLORED
    """
    A self-published derivative work based on this manga.
    """
    DOUJINSHI
    """
    The original narrative this manga is based on.
    """
    MAIN_STORY
    """
    A monochrome variant of this manga.
    """
    MONOCHROME
    """
    The previous entry in the same series.
    """
    PREQUEL
    """
    The original version of this manga before its official serialization.
    """
    PRESERIALIZATION
    """
    A manga based on the same intellectual property as this manga.
    """
    SAME_FRANCHISE
    """
    The next entry in the same series.
    """
    SEQUEL
    """
    The official serialization of this manga.
    """
    SERIALIZATION
    """
    A manga taking place in the same fictional world as this manga.
    """
    SHARED_UNIVERSE
    """
    A side work contemporaneous with the narrative of this manga.
    """
    SIDE_STORY
    """
    An official derivative work based on this manga.
    """
    SPIN_OFF
}

type MangaRelationships {
    manga: [MangaRelated!]!
    coverArt: Cover!
    authors: [Author!]!
    artists: [Author!]!
    authorArtists: [Author!]!
    creator: User
}

type MangaResults {
    data: [MangaObject!]!
    limit: Int!
    offset: Int!
    total: Int!
}

input MangaSortOrder @oneOf {
    createdAt: OrderDirection
    followedCount: OrderDirection
    latestUploadedChapter: OrderDirection
    relevance: OrderDirection
    title: OrderDirection
    updatedAt: OrderDirection
    year: OrderDirection
}

"""
Manga state for approval.

The purpose of these are to discourage troll entries by requiring staff approval.
"""
enum MangaState {
    DRAFT
    PUBLISHED
    REJECTED
    SUBMITTED
}

enum MangaStatus {
    """
    Manga is still going on.
    """
    ONGOING
    """
    Manga is completed.
    """
    COMPLETED
    """
    Manga is paused from publishing new chapters.
    """
    HIATUS
    """
    Manga has been cancelled.
    """
    CANCELLED
}

"""
"Order by" directions for manga results.
"""
enum OrderDirection {
    ASCENDING
    DESCENDING
}

type Query {
    manga: MangaQueries!
}

"""
Relationship types for reference expansion.

<https://api.mangadex.org/docs/static-data/#relationship-types>

This should only be used with the `includes[]` query parameter.
For response types, refer to the [`RelationshipType` enum](crate::RelationshipType).
"""
enum ReferenceExpansionResource {
    """
    Manga resource.
    """
    MANGA
    """
    Chapter resource.
    """
    CHAPTER
    """
    A Cover Art for a manga.

    On manga resources, only one cover art resource relation is returned,
    marking the primary cover if there are more than one. By default, this will be the latest
    volume's cover art. To see all the covers for a given manga, use the cover search endpoint.
    """
    COVER_ART
    """
    Author resource.
    """
    AUTHOR
    """
    Author resource (drawers only).
    """
    ARTIST
    """
    ScanlationGroup resource.
    """
    SCANLATION_GROUP
    """
    Tag resource.
    """
    TAG
    """
    User resource.
    """
    USER
    """
    CustomList resource.
    """
    CUSTOM_LIST
    """
    The user that created the resource
    """
    CREATOR
    """
    Report reason
    """
    REASON
    """
    Leader of a group
    """
    LEADER
    """
    Member of a group
    """
    MEMBER
    """
    A Mangadex Forums Thread,
    """
    THREAD
}

type Tag {
    id: UUID!
    attributes: TagAttributes!
}

type TagAttributes {
    name: JSONObject!
    description: JSONObject!
    group: TagGroup!
}

enum TagGroup {
    CONTENT
    FORMAT
    GENRE
    THEME
}

"""
Determines the behavior of tag interaction when including or excluding tags in the results.
"""
enum TagSearchMode {
    AND
    OR
}

"""
A UUID is a unique 128-bit number, stored as 16 octets. UUIDs are parsed as
Strings within GraphQL. UUIDs are used to assign unique identifiers to
entities without requiring a central allocating authority.

# References

* [Wikipedia: Universally Unique Identifier](http://en.wikipedia.org/wiki/Universally_unique_identifier)
* [RFC4122: A Universally Unique IDentifier (UUID) URN Namespace](http://tools.ietf.org/html/rfc4122)
"""
scalar UUID

"""
URL is a String implementing the [URL Standard](http://url.spec.whatwg.org/)
"""
scalar Url

type User {
    id: UUID!
    attributes: UserAttributes!
}

type UserAttributes {
    username: String!
    roles: [UserRole!]!
    version: Int!
}

"""
User roles that define what a user has permission to do.
More details at : https://api.mangadex.org/docs/static-data/#user-roles-enum
"""
enum UserRole {
    """
    MangaDex admins
    """
    ROLE_ADMIN
    """
    Banned
    """
    ROLE_BANNED
    """
    Helpers contributing by filling in missing information (Description, External Links) on Manga pages on MangaDex
    """
    ROLE_CONTRIBUTOR
    """
    Designer
    """
    ROLE_DESIGNER
    """
    MangaDex site developers
    """
    ROLE_DEVELOPER
    """
    Moderates the forum
    """
    ROLE_FORUM_MODERATOR
    ROLE_GLOBAL_MODERATOR
    """
    Leaders of active groups on MangaDex
    """
    ROLE_GROUP_LEADER
    """
    Member of a group
    """
    ROLE_GROUP_MEMBER
    """
    Users viewing the site without being logged in
    """
    ROLE_GUEST
    """
    Member of a group
    """
    ROLE_MEMBER
    """
    Involved with the [MangaDex@Home](mailto:MangaDex@Home) project
    """
    ROLE_MD_AT_HOME
    """
    Uploaded 500 or more chapters to MangaDex
    """
    ROLE_POWER_UPLOADER
    """
    Manages social media
    """
    ROLE_PUBLIC_RELATIONS
    """
    Staff
    """
    ROLE_STAFF
    """
    Accounts that haven't had their email address verified yet
    """
    ROLE_UNVERIFIED
    """
    A normal account
    """
    ROLE_USER
    """
    Important people that in one way or another helped MangaDex
    """
    ROLE_VIP
    UNKNOWN
}

schema {
    query: Query
}
