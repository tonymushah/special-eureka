{
  "version": 3,
  "sources": ["../../app/entry.client.tsx", "../../app/createEmotionCache.ts"],
  "sourcesContent": ["// entry.client.tsx\nimport React, { useState } from 'react'\nimport { hydrate } from 'react-dom'\nimport { CacheProvider } from '@emotion/react'\nimport { RemixBrowser } from '@remix-run/react'\n\nimport { ClientStyleContext } from './context'\nimport createEmotionCache from './createEmotionCache'\n\ninterface ClientCacheProviderProps {\n  children: React.ReactNode;\n}\n\nfunction ClientCacheProvider({ children }: ClientCacheProviderProps) {\n  const [cache, setCache] = useState(createEmotionCache())\n\n  function reset() {\n    setCache(createEmotionCache())\n  }\n\n  return (\n    <ClientStyleContext.Provider value={{ reset }}>\n      <CacheProvider value={cache}>{children}</CacheProvider>\n    </ClientStyleContext.Provider>\n  )\n}\n\nhydrate(\n  <ClientCacheProvider>\n    <RemixBrowser />\n  </ClientCacheProvider>,\n  document,\n)", "import createCache from '@emotion/cache'\n\nexport default function createEmotionCache() {\n  return createCache({ key: 'css' })\n}"],
  "mappings": ";;;;;;;;;;;;;;;;AACA,mBAAgC;AAChC,uBAAwB;AACxB,IAAAA,gBAA8B;;;ACH9B,mBAAwB;AAET,SAAR,qBAAsC;AAC3C,aAAO,aAAAC,SAAY,EAAE,KAAK,MAAM,CAAC;AACnC;;;ADJA;AAaA,SAAS,oBAAoB,EAAE,SAAS,GAA6B;AACnE,QAAM,CAAC,OAAO,QAAQ,QAAI,uBAAS,mBAAmB,CAAC;AAEvD,WAAS,QAAQ;AACf,aAAS,mBAAmB,CAAC;AAAA,EAC/B;AAEA,SACE,mDAAC,mBAAmB,UAAnB;AAAA,IAA4B,OAAO,EAAE,MAAM;AAAA,IAC1C,6DAAC;AAAA,MAAc,OAAO;AAAA,MAAQ;AAAA,OAA9B;AAAA;AAAA;AAAA;AAAA,WAAuC;AAAA,KADzC;AAAA;AAAA;AAAA;AAAA,SAEA;AAEJ;AAAA,IAEA;AAAA,EACE,mDAAC;AAAA,IACC,6DAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,WAAc;AAAA,KADhB;AAAA;AAAA;AAAA;AAAA,SAEA;AAAA,EACA;AACF;",
  "names": ["import_react", "createCache"]
}
